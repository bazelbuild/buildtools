module(
    name = "buildtools",
    version = "0.0.0",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.7.9")
bazel_dep(name = "aspect_rules_js", version = "2.0.1")
bazel_dep(name = "bazel_features", version = "1.14.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "gazelle", version = "0.37.0", repo_name = "bazel_gazelle")
bazel_dep(name = "protobuf", version = "28.0-rc1", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_go", version = "0.49.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_nodejs", version = "6.2.0")
bazel_dep(name = "rules_proto", version = "6.0.2")
# -- bazel_dep definitions -- #

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.20.3")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
go_deps.module(
    path = "golang.org/x/tools",
    sum = "h1:zdAyfUGbYmuVokhzVmghFl2ZJh5QhcfebBgmVPFYA+8=",
    version = "v0.15.0",
)
use_repo(
    go_deps,
    "com_github_golang_protobuf",
    "com_github_google_go_cmp",
    "net_starlark_go",
    "org_golang_google_protobuf",
    "org_golang_x_tools",
)

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(
    name = "nodejs",
    node_version = "16.7.0",
)

toolchains = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
use_repo(toolchains, "jq_toolchains")
use_repo(toolchains, "copy_to_directory_toolchains")

register_toolchains(
    "@jq_toolchains//:all",
    "@copy_to_directory_toolchains//:all",
)
